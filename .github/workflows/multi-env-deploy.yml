name: Deploy application in multi-env

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: # Manually run this workflow

jobs:
  deploy:
    name: Deploy to ${{ matrix.environment }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    timeout-minutes: 600 # Set the maximum job execution time to 10 hours
    strategy:
      matrix:
        environment:
          - TEST
          - QA
          - PROD

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup PHP 8.0
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
      - uses: actions/setup-node@master
      
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare .env file
        run: |
          sed -i "s/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/" .env
          sed -i "s/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/" .env
          sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/" .env

      - name: Prepare .php files
        run: |
          echo "${{ secrets.INIT_REPO }}" > "${{ secrets.REPO_PATH }}/InitRepository.php"
          echo "${{ secrets.INSTALL_REPO }}" > "${{ secrets.REPO_PATH }}/InstallRepository.php"
          echo "${{ secrets.LICENSE_REPO }}" > "${{ secrets.REPO_PATH }}/LicenseRepository.php"

      - name: Generate key and storage link
        run: |
          php artisan key:generate
          php artisan storage:link

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: |
          php artisan config:clear
          php artisan config:cache
          vendor/bin/phpunit

      - name: Sync files via FTP on ${{ matrix.environment }}
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          exclude: |
            **/.git*
            **/.git*/**
